operator ( a ? )
    return if a then 1 else 0 ;

operator ( ! a )
    return ( 1 - ( a ? ) ) ;

operator ( a || b )
    return ( ( a ? ) + ( b ? ) ) ;

operator ( a && b )
    return ( a * b ) ;

operator ( a != b )
    return ( a - b ) ;

operator ( a == b )
    return ( ! ( a != b ) ) ;

operator ( a <= b )
    return ( ( ( a - b ) - 1 ) / 9223372036854775807 ) ;

operator ( a < b )
    return ( ( a <= b ) && ( a != b ) ) ;

operator ( a > b )
    return ( b < a ) ;

operator ( a >= b )
    return ( b <= a ) ;

operator ( a -> b )
    return ( b && ( ! a ) ) ;

operator ( a <-> b )
    return ( ( a -> b ) && ( b -> a ) ) ;

operator ( - a )
    return ( 0 - a ) ;

operator ( src .cpy_to dest )
    [ dest ] = [ src ] ;
    return 0 ;

operator ( src len .cpy_to dest )
    return if ( len == 0 ) then 0
           else ( ( src .cpy_to dest ) +
                  ( ( src + 1 ) ( len - 1 ) .cpy_to ( dest + 1 ) )
                ) ;

operator ( :main )
    [ 0 ] = 72 ;
    [ 1 ] = 101 ;
    [ 2 ] = 108 ;
    [ 3 ] = 108 ;
    [ 4 ] = 111 ;
    [ 5 ] = 44 ;
    [ 6 ] = 32 ;
    [ 7 ] = 119 ;
    [ 11 ] = 100 ;
    [ 8 ] = 111 ;
    [ 9 ] = 114 ;
    [ 10 ] = 108 ;
    [ 13 ] = 10 ;
    [ 12 ] = 33 ;
    let a = 256 ;
    a = [ 12 ] ;
    a = ( a / 2 ) ;

    ( 0 14 .cpy_to 727 ) ;

    ( :print 727 14 ) ;
    
    return a ;
